#!/bin/bash
# =====================================================
# üß© ARCH DREAM MACHINE - M√ìDULO BASH
# =====================================================
# Script de instalaci√≥n del m√≥dulo Bash
# =====================================================

set -euo pipefail
IFS=$'\n\t'

# Cargar biblioteca com√∫n
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/../../../lib/common.sh"

# =====================================================
# üîß CONFIGURACI√ìN DEL M√ìDULO
# =====================================================

MODULE_NAME="Bash Fallback"
MODULE_DESCRIPTION="Configuraci√≥n de fallback para sistemas sin Zsh"
MODULE_DEPENDENCIES=("bash")
MODULE_FILES=("bashrc")

# =====================================================
# üîß FUNCIONES DEL M√ìDULO
# =====================================================

# Instalar dependencias del m√≥dulo
install_module_dependencies() {
    log "Instalando dependencias del m√≥dulo $MODULE_NAME..."
    
    # Verificar que Bash est√© instalado
    if command -v bash &>/dev/null; then
        success "‚úì Bash ya est√° instalado"
    else
        install_package "bash"
    fi
}

# Configurar archivos del m√≥dulo
configure_module_files() {
    log "Configurando archivos del m√≥dulo $MODULE_NAME..."
    
    # Crear symlink para .bashrc
    create_symlink "$CONFIG_DIR/bashrc" "$HOME/.bashrc" ".bashrc"
    
    # Crear symlink para .bash_profile si no existe
    if [[ ! -e "$HOME/.bash_profile" ]]; then
        create_symlink "$CONFIG_DIR/bashrc" "$HOME/.bash_profile" ".bash_profile"
    fi
}

# Verificar instalaci√≥n del m√≥dulo
verify_module_installation() {
    log "Verificando instalaci√≥n del m√≥dulo $MODULE_NAME..."
    
    local checks_passed=0
    local total_checks=3
    
    # Verificar Bash instalado
    if command -v bash &>/dev/null; then
        success "‚úì Bash instalado"
        ((checks_passed++))
    else
        error "‚úó Bash no est√° instalado"
    fi
    
    # Verificar .bashrc
    if [[ -L "$HOME/.bashrc" ]] && [[ -e "$HOME/.bashrc" ]]; then
        success "‚úì .bashrc configurado"
        ((checks_passed++))
    else
        error "‚úó .bashrc no est√° configurado"
    fi
    
    # Verificar .bash_profile
    if [[ -L "$HOME/.bash_profile" ]] && [[ -e "$HOME/.bash_profile" ]]; then
        success "‚úì .bash_profile configurado"
        ((checks_passed++))
    else
        success "‚úì .bash_profile no es necesario (opcional)"
        ((checks_passed++))
    fi
    
    if [[ $checks_passed -eq $total_checks ]]; then
        success "M√≥dulo $MODULE_NAME instalado correctamente ($checks_passed/$total_checks)"
        return 0
    else
        warn "M√≥dulo $MODULE_NAME instalado parcialmente ($checks_passed/$total_checks)"
        return 1
    fi
}

# =====================================================
# üèÅ FUNCI√ìN PRINCIPAL
# =====================================================

main() {
    # Inicializar biblioteca
    init_library
    
    # Banner
    echo -e "${BOLD}${CYAN}üß© INSTALANDO M√ìDULO: $MODULE_NAME${COLOR_RESET}"
    echo -e "${CYAN}$MODULE_DESCRIPTION${COLOR_RESET}\n"
    
    # Instalar dependencias
    install_module_dependencies
    
    # Configurar archivos
    configure_module_files
    
    # Verificar instalaci√≥n
    verify_module_installation
    
    echo -e "\n${BOLD}${GREEN}‚úÖ M√≥dulo $MODULE_NAME instalado exitosamente${COLOR_RESET}"
    echo -e "${YELLOW}üí° Para usar Bash: bash${COLOR_RESET}"
}

# Ejecutar funci√≥n principal
main "$@" 