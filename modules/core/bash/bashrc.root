#!/bin/bash
# =====================================================
# 🔴 ROOT BASH Configuration - Arch Dream Unified
# =====================================================
# Configuración optimizada para root usando arquitectura unificada
# Features: Shared base, security-focused, Starship prompt
# =====================================================

# =====================================================
# ⚡ CORE INITIALIZATION
# =====================================================

# Load unified shell base configuration
SHELL_BASE_FILE="${BASH_SOURCE[0]%/*}/../../../lib/shell-base.sh"
if [[ -f "$SHELL_BASE_FILE" ]]; then
    source "$SHELL_BASE_FILE"
    init_shell_base
else
    echo "⚠️  Warning: Unified shell base not found, using fallback configuration"
    # Fallback basic configuration for root
    export EDITOR='nvim' VISUAL='nvim' BROWSER='firefox' TERMINAL='kitty'
    export LANG="${ARCH_DREAM_LOCALE:-C.utf8}"
    export LC_ALL="$LANG"
    export ROOT_MODE=1
fi

# Source global definitions
[[ -f /etc/bashrc ]] && source /etc/bashrc

# =====================================================
# 🔴 ROOT-SPECIFIC OPTIMIZATIONS
# =====================================================

# History configuration - Optimized for root
HISTCONTROL=ignoreboth:erasedups
HISTSIZE=5000
HISTFILESIZE=10000
HISTTIMEFORMAT="%Y-%m-%d %T "
HISTIGNORE="ls:ll:la:cd:pwd:clear:history:exit"

# Append to the history file, don't overwrite it
shopt -s histappend

# Check the window size after each command
shopt -s checkwinsize

# Make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# =====================================================
# 🔧 COMPLETION SYSTEM
# =====================================================

# Enable programmable completion features
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

# =====================================================
# 🚀 ENVIRONMENT INTEGRATIONS
# =====================================================

# FZF key bindings and completion
if command -v fzf &> /dev/null; then
    # Use system package if available
    if [[ -f /usr/share/fzf/key-bindings.bash ]] && [[ -f /usr/share/fzf/completion.bash ]]; then
        source /usr/share/fzf/key-bindings.bash
        source /usr/share/fzf/completion.bash
    fi
    
    # FZF configuration
    export FZF_DEFAULT_OPTS="
    --color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796
    --color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6
    --color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796
    --height=60% --layout=reverse --border --margin=1 --padding=1
    --preview-window=right:60%:wrap
    --bind='ctrl-u:preview-page-up,ctrl-d:preview-page-down'
    --bind='ctrl-/:toggle-preview'
    --bind='ctrl-y:execute-silent(echo {} | xclip -selection clipboard)'
    "
    
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git --exclude node_modules'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git --exclude node_modules'
fi

# =====================================================
# 🔧 DEVELOPMENT INTEGRATIONS
# =====================================================

# Bun completions
[ -s "/root/.bun/_bun" ] && source "/root/.bun/_bun"

# Load any additional custom configurations
[ -f /root/.bashrc.local ] && source /root/.bashrc.local

# Create local config if not exists
if [[ ! -f "/root/.bashrc.local" ]]; then
    cat > "/root/.bashrc.local" << 'EOF'
# =====================================================
# 🔴 ROOT CONFIGURATION LOCAL - BASH
# =====================================================
# Personalizaciones específicas del usuario root
# Este archivo NO se sobrescribe con actualizaciones
# =====================================================

# Variables de entorno personalizadas
# export ARCH_DREAM_LOCALE="en_US.UTF-8"
# export TARGET=""
# export PROXY=""

# Aliases personalizados
# alias custom="comando personalizado"

# Funciones personalizadas
# custom_function() {
#     echo "Mi función personalizada"
# }

EOF
fi

# =====================================================
# 🔧 ROOT SECURITY OPTIMIZATIONS
# =====================================================

# Disable auto-launch tools in root mode
if command -v fastfetch >/dev/null 2>&1; then
    fastfetch() {
        if [[ "$1" == "--auto" || "$1" == "-a" ]]; then
            echo "🔴 Fastfetch auto-launch disabled in root mode"
            return 0
        fi
        command fastfetch "$@"
    }
fi

# Disable welcome messages
export BASH_WELCOME_SHOWN=1

# Mark shell as loaded
export BASH_ROOT_CONFIG_LOADED=true
[[ -n "${ARCH_DREAM_DEBUG:-}" ]] && echo "✅ Root Bash configuration loaded successfully"