#!/bin/bash
# =====================================================
# 🚀 BASH Configuration - Arch Dream Optimized
# =====================================================
# Configuración ultra-optimizada usando arquitectura unificada
# Features: Shell base unificado, lazy loading, performance optimizado
# =====================================================

# =====================================================
# ⚡ CORE INITIALIZATION
# =====================================================

# Load unified shell base configuration
BASHRC_PATH="$(realpath "${BASH_SOURCE[0]}")"
BASHRC_DIR="$(dirname "$BASHRC_PATH")"
SHELL_BASE_FILE="$BASHRC_DIR/../../../lib/shell-base.sh"
if [[ -f "$SHELL_BASE_FILE" ]]; then
    source "$SHELL_BASE_FILE"
else
    echo "⚠️  Warning: Unified shell base not found at $SHELL_BASE_FILE"
    # Minimal fallback configuration
    export EDITOR='nvim' VISUAL='nvim' BROWSER='firefox' TERMINAL='kitty'
    export LANG="${ARCH_DREAM_LOCALE:-en_US.UTF-8}"
    export LC_ALL="$LANG"
fi

# Source global definitions if available
[[ -f /etc/bashrc ]] && source /etc/bashrc

# =====================================================
# 🎯 BASH-SPECIFIC OPTIMIZATIONS
# =====================================================

# Shell options - Essential only (only in bash)
if [[ -n "$BASH_VERSION" ]]; then
    shopt -s histappend checkwinsize
fi

# Make less more friendly for non-text input files
[[ -x /usr/bin/lesspipe ]] && eval "$(SHELL=/bin/sh lesspipe)"

# =====================================================
# 🔧 BASH-SPECIFIC FEATURES
# =====================================================

# Enable programmable completion features (lazy load)
load_bash_completion() {
    if ! shopt -oq posix; then
        if [[ -f /usr/share/bash-completion/bash_completion ]]; then
            source /usr/share/bash-completion/bash_completion
        elif [[ -f /etc/bash_completion ]]; then
            source /etc/bash_completion
        fi
    fi
}

# FZF integration (lazy load)
setup_fzf() {
    if command -v fzf &> /dev/null; then
        # Use system package if available
        if [[ -f /usr/share/fzf/key-bindings.bash ]] && [[ -f /usr/share/fzf/completion.bash ]]; then
            source /usr/share/fzf/key-bindings.bash
            source /usr/share/fzf/completion.bash
        fi
        
        # FZF configuration
        export FZF_DEFAULT_OPTS="--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 --color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 --color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796 --height=60% --layout=reverse --border --margin=1 --padding=1"
        export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git --exclude node_modules'
        export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
        export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git --exclude node_modules'
    fi
}

# Initialize features only when needed
[[ $- == *i* ]] && setup_fzf

# Bun completions (lazy)
[[ -s "$HOME/.bun/_bun" ]] && source "$HOME/.bun/_bun"

# Fastfetch is handled by zsh only - removed from bash

# Initialize starship prompt for bash
if command -v starship &>/dev/null; then
    eval "$(starship init bash)"
fi

# =====================================================
# 🏁 FINAL INITIALIZATION
# =====================================================

# Load local customizations
[[ -f ~/.bashrc.local ]] && source ~/.bashrc.local

# Create minimal local config if not exists
if [[ ! -f "$HOME/.bashrc.local" ]]; then
    cat > "$HOME/.bashrc.local" << 'EOF'
# =====================================================
# 🧩 CONFIGURACIÓN LOCAL DE BASH - ARCH DREAM
# =====================================================
# Personalizaciones específicas del usuario
# Este archivo NO se sobrescribe con actualizaciones
# =====================================================

# Variables de entorno personalizadas
# export ARCH_DREAM_LOCALE="en_US.UTF-8"

# Aliases personalizados
# alias custom="comando personalizado"

# Funciones personalizadas
# custom_function() {
#     echo "Mi función personalizada"
# }

EOF
fi

# Performance optimizations
export BASH_WELCOME_SHOWN=1
export BASH_CONFIG_LOADED=true

# Debug message (only if requested)
[[ -n "${ARCH_DREAM_DEBUG:-}" ]] && echo "✅ Bash configuration loaded successfully"
