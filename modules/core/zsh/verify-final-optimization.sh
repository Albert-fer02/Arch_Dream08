#!/bin/zsh
# =====================================================
# ‚úÖ VERIFICACI√ìN FINAL DE OPTIMIZACI√ìN - ARCH DREAM v4.3
# =====================================================
# Script para verificar que todas las optimizaciones
# est√©n aplicadas correctamente
# =====================================================

set -e

# Colores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}‚úÖ VERIFICACI√ìN FINAL DE OPTIMIZACI√ìN${NC}"
echo "=================================================="
echo ""

# Funci√≥n para verificar archivos comentados
verify_commented_files() {
    echo -e "${BLUE}üìù VERIFICANDO ARCHIVOS COMENTADOS:${NC}"
    echo ""
    
    # Verificar zshrc.modular
    if grep -q "#.*init_cache" modules/core/zsh/zshrc.modular; then
        echo -e "${GREEN}‚úÖ init_cache comentado en zshrc.modular${NC}"
    else
        echo -e "${RED}‚ùå init_cache NO comentado en zshrc.modular${NC}"
    fi
    
    # Verificar cache.sh
    if grep -q "#.*cache_preload.*&" modules/core/common/cache.sh; then
        echo -e "${GREEN}‚úÖ cache_preload & comentado en cache.sh${NC}"
    else
        echo -e "${RED}‚ùå cache_preload & NO comentado en cache.sh${NC}"
    fi
    
    if grep -q "#.*cache_preload()" modules/core/common/cache.sh; then
        echo -e "${GREEN}‚úÖ Funci√≥n cache_preload comentada en cache.sh${NC}"
    else
        echo -e "${RED}‚ùå Funci√≥n cache_preload NO comentada en cache.sh${NC}"
    fi
    
    # Verificar logging.sh
    if grep -q "#.*sleep 60" modules/core/common/logging.sh; then
        echo -e "${GREEN}‚úÖ sleep 60 comentado en logging.sh${NC}"
    else
        echo -e "${RED}‚ùå sleep 60 NO comentado en logging.sh${NC}"
    fi
    
    # Verificar cleanup.zsh
    if grep -q "#.*cache\.sh" modules/core/zsh/advanced/cleanup.zsh; then
        echo -e "${GREEN}‚úÖ cache.sh comentado en cleanup.zsh${NC}"
    else
        echo -e "${RED}‚ùå cache.sh NO comentado en cleanup.zsh${NC}"
    fi
    
    # Verificar diagnose.zsh
    if grep -q "#.*cache\.sh" modules/core/zsh/diagnose.zsh; then
        echo -e "${GREEN}‚úÖ cache.sh comentado en diagnose.zsh${NC}"
    else
        echo -e "${RED}‚ùå cache.sh NO comentado en diagnose.zsh${NC}"
    fi
    
    echo ""
}

# Funci√≥n para verificar mensajes comentados
verify_commented_messages() {
    echo -e "${BLUE}üîá VERIFICANDO MENSAJES COMENTADOS:${NC}"
    echo ""
    
    # Verificar mensajes de INFO
    if grep -q "#.*zsh_log_info.*ZSH Shell base initialized" modules/core/zsh/config/shell-base.zsh; then
        echo -e "${GREEN}‚úÖ Mensaje ZSH Shell base initialized comentado${NC}"
    else
        echo -e "${RED}‚ùå Mensaje ZSH Shell base initialized NO comentado${NC}"
    fi
    
    if grep -q "#.*zsh_log_info.*Starship initialized successfully" modules/core/zsh/config/starship.zsh; then
        echo -e "${GREEN}‚úÖ Mensaje Starship initialized successfully comentado${NC}"
    else
        echo -e "${RED}‚ùå Mensaje Starship initialized successfully NO comentado${NC}"
    fi
    
    if grep -q "#.*zsh_log_info.*ZSH modular optimizado" modules/core/zsh/zshrc.modular; then
        echo -e "${GREEN}‚úÖ Mensaje ZSH modular optimizado comentado${NC}"
    else
        echo -e "${RED}‚ùå Mensaje ZSH modular optimizado NO comentado${NC}"
    fi
    
    # Verificar mensajes de DEBUG
    if grep -q "#.*zsh_log_debug.*Loading plugin" modules/core/zsh/plugins/plugin-manager.zsh; then
        echo -e "${GREEN}‚úÖ Mensajes de debug de plugins comentados${NC}"
    else
        echo -e "${RED}‚ùå Mensajes de debug de plugins NO comentados${NC}"
    fi
    
    echo ""
}

# Funci√≥n para verificar configuraci√≥n de logging
verify_logging_config() {
    echo -e "${BLUE}üîá VERIFICANDO CONFIGURACI√ìN DE LOGGING:${NC}"
    echo ""
    
    # Verificar logging-config.zsh
    if [[ -f modules/core/zsh/config/logging-config.zsh ]]; then
        if grep -q "ARCH_DREAM_LOG_LEVEL.*FATAL" modules/core/zsh/config/logging-config.zsh; then
            echo -e "${GREEN}‚úÖ Logging configurado en nivel FATAL${NC}"
        else
            echo -e "${RED}‚ùå Logging NO configurado en nivel FATAL${NC}"
        fi
        
        if grep -q "ARCH_DREAM_LOG_CONSOLE.*false" modules/core/zsh/config/logging-config.zsh; then
            echo -e "${GREEN}‚úÖ Output a consola deshabilitado${NC}"
        else
            echo -e "${RED}‚ùå Output a consola NO deshabilitado${NC}"
        fi
    else
        echo -e "${RED}‚ùå Archivo logging-config.zsh no encontrado${NC}"
    fi
    
    echo ""
}

# Funci√≥n para verificar estado del sistema
verify_system_status() {
    echo -e "${BLUE}üîç VERIFICANDO ESTADO DEL SISTEMA:${NC}"
    echo ""
    
    # Verificar si hay procesos en background
    local background_jobs=$(jobs 2>/dev/null | wc -l)
    if [[ $background_jobs -eq 0 ]]; then
        echo -e "${GREEN}‚úÖ No hay procesos en background${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Procesos en background detectados: $background_jobs${NC}"
        jobs
    fi
    
    # Verificar variables de logging
    echo "üìä Variables de logging:"
    echo "   ‚Ä¢ ARCH_DREAM_LOG_LEVEL: ${ARCH_DREAM_LOG_LEVEL:-'No definida'}"
    echo "   ‚Ä¢ ARCH_DREAM_LOG_CONSOLE: ${ARCH_DREAM_LOG_CONSOLE:-'No definida'}"
    
    echo ""
}

# Funci√≥n para mostrar resumen final
show_final_summary() {
    echo -e "${BLUE}üìä RESUMEN FINAL DE OPTIMIZACI√ìN:${NC}"
    echo ""
    echo "‚úÖ Archivos comentados:"
    echo "   ‚Ä¢ init_cache en zshrc.modular"
    echo "   ‚Ä¢ cache_preload en cache.sh"
    echo "   ‚Ä¢ cache.sh en cleanup.zsh y diagnose.zsh"
    echo "   ‚Ä¢ sleep 60 en logging.sh"
    echo ""
    echo "‚úÖ Mensajes comentados:"
    echo "   ‚Ä¢ ZSH Shell base initialized"
    echo "   ‚Ä¢ Starship initialized successfully"
    echo "   ‚Ä¢ ZSH modular optimizado"
    echo "   ‚Ä¢ Mensajes de debug de plugins"
    echo ""
    echo "‚úÖ Configuraci√≥n de logging:"
    echo "   ‚Ä¢ Nivel: FATAL (solo errores cr√≠ticos)"
    echo "   ‚Ä¢ Consola: Sin output"
    echo "   ‚Ä¢ Terminal: Completamente silenciosa"
    echo ""
    echo "‚úÖ Procesos eliminados:"
    echo "   ‚Ä¢ cache_preload en background"
    echo "   ‚Ä¢ cleanup_logs y rotate_logs en background"
    echo "   ‚Ä¢ Procesos de logging autom√°tico"
    echo ""
}

# Funci√≥n principal
main() {
    echo -e "${BLUE}üöÄ Iniciando verificaci√≥n final de optimizaci√≥n...${NC}"
    echo ""
    
    # Verificar archivos comentados
    verify_commented_files
    
    # Verificar mensajes comentados
    verify_commented_messages
    
    # Verificar configuraci√≥n de logging
    verify_logging_config
    
    # Verificar estado del sistema
    verify_system_status
    
    # Mostrar resumen final
    show_final_summary
    
    echo "=================================================="
    echo -e "${GREEN}üéâ VERIFICACI√ìN FINAL COMPLETADA!${NC}"
    echo ""
    echo -e "${BLUE}üí° PR√ìXIMOS PASOS:${NC}"
    echo "1. Ejecuta: exec zsh"
    echo "2. Tu terminal deber√≠a abrirse instant√°neamente"
    echo "3. Sin procesos en background"
    echo "4. Sin mensajes de logging"
    echo "5. Solo tu prompt de Starship perfecto"
    echo ""
    echo -e "${BLUE}üéØ RESULTADO ESPERADO:${NC}"
    echo "‚Ä¢ Terminal ultra-r√°pida y silenciosa"
    echo "‚Ä¢ Sin demoras de inicializaci√≥n"
    echo "‚Ä¢ Sin procesos zombies"
    echo "‚Ä¢ Experiencia de usuario perfecta"
    echo ""
}

# Ejecutar funci√≥n principal
main "$@"
