#!/bin/zsh
# =====================================================
# üßπ LIMPIADOR DE CONFIGURACIONES DUPLICADAS DE STARSHIP
# =====================================================
# Este script elimina todas las configuraciones duplicadas
# y mantiene solo la configuraci√≥n unificada
# =====================================================

set -e

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para imprimir con colores
print_status() {
    local status_type="$1"
    local message="$2"
    
    case "$status_type" in
        "OK")     echo -e "${GREEN}‚úÖ $message${NC}" ;;
        "WARN")   echo -e "${YELLOW}‚ö†Ô∏è  $message${NC}" ;;
        "ERROR")  echo -e "${RED}‚ùå $message${NC}" ;;
        "INFO")   echo -e "${BLUE}‚ÑπÔ∏è  $message${NC}" ;;
    esac
}

# Funci√≥n para limpiar enlaces simb√≥licos rotos
cleanup_broken_symlinks() {
    print_status "INFO" "Limpiando enlaces simb√≥licos rotos..."
    
    local broken_links=(
        "$HOME/.config/starship-catppuccin-latte.toml"
        "$HOME/.config/starship-catppuccin-mocha.toml"
        "$HOME/.config/starship-catppuccin-mocha-vscode.toml"
        "$HOME/.config/starship-catppuccin-mocha-vscode-simple.toml"
        "$HOME/.config/starship-simple.toml"
        "$HOME/.config/starship-vscode.toml"
    )
    
    for link in "${broken_links[@]}"; do
        if [[ -L "$link" ]] && [[ ! -e "$link" ]]; then
            rm -f "$link"
            print_status "OK" "Enlace roto eliminado: $(basename "$link")"
        fi
    done
}

# Funci√≥n para verificar configuraci√≥n unificada
verify_unified_config() {
    print_status "INFO" "Verificando configuraci√≥n unificada..."
    
    local config_file="$HOME/.config/starship.toml"
    
    if [[ ! -f "$config_file" ]]; then
        print_status "ERROR" "Configuraci√≥n unificada no encontrada"
        return 1
    fi
    
    # Verificar que sea la configuraci√≥n correcta
    if grep -q "ARCH DREAM UNIFIED v4.3" "$config_file"; then
        print_status "OK" "Configuraci√≥n unificada verificada"
    else
        print_status "ERROR" "Archivo no es la configuraci√≥n unificada"
        return 1
    fi
    
    # Verificar sintaxis
    if command -v starship &>/dev/null; then
        if starship init zsh --print-full-init > /dev/null 2>&1; then
            print_status "OK" "Sintaxis de configuraci√≥n v√°lida"
        else
            print_status "ERROR" "Error de sintaxis en la configuraci√≥n"
            return 1
        fi
    else
        print_status "WARN" "Starship no est√° instalado, no se puede verificar la sintaxis"
    fi
}

# Funci√≥n para mostrar estado final
show_final_status() {
    print_status "INFO" "Estado final de la configuraci√≥n de Starship:"
    echo ""
    
    local config_file="$HOME/.config/starship.toml"
    local symlink_file="$HOME/.starship.toml"
    
    echo "üìÅ Configuraci√≥n principal:"
    if [[ -f "$config_file" ]]; then
        echo "   ‚úÖ $config_file"
        echo "   üìä Tama√±o: $(du -h "$config_file" | cut -f1)"
        echo "   üîí Permisos: $(ls -l "$config_file" | awk '{print $1}')"
    else
        echo "   ‚ùå $config_file (NO ENCONTRADO)"
    fi
    
    echo ""
    echo "üîó Enlace simb√≥lico:"
    if [[ -L "$symlink_file" ]]; then
        echo "   ‚úÖ $symlink_file"
        echo "   ‚û°Ô∏è  Apunta a: $(readlink "$symlink_file")"
    else
        echo "   ‚ùå $symlink_file (NO ENCONTRADO)"
    fi
    
    echo ""
    echo "üìã Archivos de backup:"
    local backup_count=$(find "$HOME/.config/starship" -name "backup-*" -type d 2>/dev/null | wc -l)
    if [[ $backup_count -gt 0 ]]; then
        echo "   üì¶ $backup_count directorios de backup encontrados"
        echo "   üìç Ubicaci√≥n: $HOME/.config/starship/backup-*/"
    else
        echo "   ‚ÑπÔ∏è  No se encontraron backups"
    fi
}

# Funci√≥n principal
main() {
    echo -e "${BLUE}üßπ LIMPIADOR DE CONFIGURACIONES DUPLICADAS DE STARSHIP${NC}"
    echo "=================================================="
    echo ""
    
    print_status "INFO" "Iniciando limpieza..."
    
    # Limpiar enlaces simb√≥licos rotos
    cleanup_broken_symlinks
    
    # Verificar configuraci√≥n unificada
    if verify_unified_config; then
        print_status "OK" "Configuraci√≥n unificada verificada correctamente"
    else
        print_status "ERROR" "Problemas con la configuraci√≥n unificada"
        return 1
    fi
    
    # Mostrar estado final
    show_final_status
    
    echo ""
    echo "=================================================="
    print_status "OK" "Limpieza completada exitosamente!"
    echo ""
    echo -e "${BLUE}üí° PR√ìXIMOS PASOS:${NC}"
    echo "1. Reinicia tu terminal"
    echo "2. Ejecuta: starship-restart"
    echo "3. Verifica que no hay errores de STARSHIP_CMD_STATUS"
    echo ""
    echo -e "${BLUE}üîß COMANDOS √öTILES:${NC}"
    echo "‚Ä¢ run_diagnosis - Para verificar el sistema"
    echo "‚Ä¢ perform_cleanup - Para limpiar conflictos"
    echo "‚Ä¢ starship-restart - Para reiniciar Starship"
}

# Ejecutar funci√≥n principal
main "$@"
