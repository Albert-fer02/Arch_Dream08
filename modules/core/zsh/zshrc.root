#!/bin/zsh
# =====================================================
# 🔴 ROOT ZSH Configuration - Arch Dream Unified
# =====================================================
# Configuración optimizada para root usando arquitectura unificada
# Features: Shared base, security-focused, Starship prompt
# =====================================================

# =====================================================
# ⚡ CORE INITIALIZATION
# =====================================================

# Load unified shell base configuration
SHELL_BASE_FILE="${${(%):-%x}:h}/../../../lib/shell-base.sh"
if [[ -f "$SHELL_BASE_FILE" ]]; then
    source "$SHELL_BASE_FILE"
    init_shell_base
else
    echo "⚠️  Warning: Unified shell base not found, using fallback configuration"
    # Fallback basic configuration for root
    export EDITOR='nvim' VISUAL='nvim' BROWSER='firefox' TERMINAL='kitty'
    export LANG="${ARCH_DREAM_LOCALE:-en_US.UTF-8}"
    export LC_ALL="$LANG"
    export ROOT_MODE=1
fi

# =====================================================
# 🔴 ROOT-SPECIFIC OPTIMIZATIONS
# =====================================================

# Disable flow control commands (keeps C-s from freezing everything)
stty -ixon

# Enable completion caching with optimized settings for root
zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-path /root/.zsh/cache
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# Optimize history for performance and security (root-specific paths)
HISTFILE=/root/.zsh_history
HISTSIZE=50000
SAVEHIST=50000
setopt HIST_EXPIRE_DUPS_FIRST HIST_IGNORE_ALL_DUPS HIST_IGNORE_SPACE 
setopt HIST_FIND_NO_DUPS HIST_SAVE_NO_DUPS INC_APPEND_HISTORY 
setopt SHARE_HISTORY HIST_VERIFY HIST_REDUCE_BLANKS

# Shell Options - Optimized for root productivity
setopt CORRECT CORRECT_ALL NOCLOBBER AUTO_CD AUTO_PUSHD 
setopt PUSHD_IGNORE_DUPS PUSHD_SILENT GLOB_DOTS EXTENDED_GLOB 
setopt NUMERIC_GLOB_SORT NULL_GLOB AUTO_MENU AUTO_PARAM_SLASH

# =====================================================
# 🔧 ZINIT PLUGIN MANAGER SETUP (ROOT)
# =====================================================

# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-/root/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

# =====================================================
# 🔌 ZINIT PLUGINS - Root Productivity Suite
# =====================================================

# Essential zsh plugins
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma-continuum/fast-syntax-highlighting

# Navigation and productivity
zinit light rupa/z
zinit light zdharma-continuum/history-search-multi-word
zinit light agkozak/zsh-z

# =====================================================
# 🎨 COMPLETION ENHANCEMENTS
# =====================================================

# Case-insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# Better completion for kill command
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# SSH completion
zstyle ':completion:*:ssh:*' hosts off
zstyle ':completion:*:scp:*' hosts off

# =====================================================
# 🔌 PLUGIN CONFIGURATIONS
# =====================================================

# Autosuggestions - Enhanced
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666,bold"
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20

# Syntax highlighting - Enhanced
typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
ZSH_HIGHLIGHT_STYLES[command]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=yellow,bold'
ZSH_HIGHLIGHT_STYLES[function]='fg=blue,bold'

# =====================================================
# 🏁 INITIALIZATION
# =====================================================

# Load completions with cache optimization
autoload -Uz compinit
ZSH_CACHE_DIR="/root/.zsh"
mkdir -p "$ZSH_CACHE_DIR"

if [[ -n $ZSH_CACHE_DIR/compdump(#qN.mh+24) ]]; then
    compinit -d "$ZSH_CACHE_DIR/compdump"
else
    compinit -C -d "$ZSH_CACHE_DIR/compdump"
fi

# Bun completions
[[ -s "/root/.bun/_bun" ]] && source "/root/.bun/_bun"

# FZF key bindings - Use system package first, then fallback
if [[ -f /usr/share/fzf/key-bindings.zsh ]] && [[ -f /usr/share/fzf/completion.zsh ]]; then
    source /usr/share/fzf/key-bindings.zsh
    source /usr/share/fzf/completion.zsh
elif command -v fzf &>/dev/null; then
    export FZF_COMPLETION_TRIGGER='**'
fi

# Load any additional custom configurations
[[ -f /root/.zshrc.local ]] && source /root/.zshrc.local

# Create local config if not exists
if [[ ! -f "/root/.zshrc.local" ]]; then
    cat > "/root/.zshrc.local" << 'EOF'
# =====================================================
# 🔴 ROOT CONFIGURATION LOCAL - ZSH
# =====================================================
# Personalizaciones específicas del usuario root
# Este archivo NO se sobrescribe con actualizaciones
# =====================================================

# Variables de entorno personalizadas
# export TARGET=""
# export PROXY=""

# Aliases personalizados
# alias custom="comando personalizado"

# Funciones personalizadas
# custom_function() {
#     echo "Mi función personalizada"
# }

EOF
fi

# =====================================================
# 🔧 ROOT SECURITY OPTIMIZATIONS
# =====================================================

# Disable auto-launch tools in root mode
if command -v fastfetch >/dev/null 2>&1; then
    fastfetch() {
        if [[ "$1" == "--auto" || "$1" == "-a" ]]; then
            echo "🔴 Fastfetch auto-launch disabled in root mode"
            return 0
        fi
        command fastfetch "$@"
    }
fi

# Disable gitstatus messages
export GITSTATUS_DAEMON_LOG_LEVEL=ERROR
export GITSTATUS_DAEMON_LOG_LEVEL_STDERR=ERROR

# Mark shell as loaded
export ZSH_ROOT_CONFIG_LOADED=true
[[ -n "${ARCH_DREAM_DEBUG:-}" ]] && echo "✅ Root Zsh configuration loaded successfully"